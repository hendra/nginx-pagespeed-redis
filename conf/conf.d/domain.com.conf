server {
  listen 80;
  server_name www.domain.com;
  return 301 http://domain.com$request_uri;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name domain.com;

  #pagespeed on;
  #pagespeed Domain http://domain.com;
  #pagespeed SslCertDirectory /etc/ssl/cert;
  #pagespeed SslCertFile /etc/ssl/cert/COMODO_RSA_Certification_Authority.crt;

  keepalive_timeout 2000;

  root       /usr/local/nginx/html/wordpress;
  error_log  /usr/local/nginx/logs/error.log crit;
  access_log off;

  location / {
    index index.html index.php; ## Allow a static html file to be shown first
    try_files $uri $uri/ @handler; ## If missing pass the URI to Wordpress's front handler
    expires 30d; ## Assume all files are cachable
  }

  proxy_connect_timeout       600;
  proxy_send_timeout          600;
  proxy_read_timeout          600;

  send_timeout                600;

  fastcgi_buffers 8 128k;
  fastcgi_buffer_size 256k;

  #Fix importing and exporting dataflow issues
  fastcgi_read_timeout    600;

  location  /. { ## Disable .htaccess and other hidden files
    return 404;
  }

  location @handler { ## Wordpress uses a common front handler
    rewrite / /index.php?$args;
  }

  location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
    rewrite ^(.*.php)/ $1 last;
  }

  location ~* \.(ico|css|js|gif|jpe?g|png)(\?[0-9]+)?$ {
    expires max;
    log_not_found off;
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }
  
  location ~* \.php$ {
    fastcgi_pass   unix:///var/run/php/php7.1-fpm.sock;
    include        fastcgi.conf;
    fastcgi_param  MAGE_RUN_CODE default;
    fastcgi_param  MAGE_RUN_TYPE store;
    include        fastcgi_params; ## See /etc/nginx/fastcgi_params
  }

  #ssl                         on;
  #ssl_certificate             /etc/ssl/certs/domain.com.crt;
  #ssl_certificate_key         /etc/ssl/private/domain.com.key;
  #ssl_trusted_certificate     /etc/ssl/certs/comodo.ca-bundle;
  #ssl_prefer_server_ciphers   on;
}
